# ===========================
# STAGE 1 — Builder
# ===========================
FROM python:3.11-slim AS builder

# Evita prompts interactivos y define encoding
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

# Instalar dependencias del sistema necesarias para psycopg2, PIL, etc.
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        libpq-dev \
        libffi-dev \
        libssl-dev \
        gcc \
        curl \
        wget \
        && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copiar requirements
COPY ../backend/requirements.txt .

# Actualizar pip e instalar dependencias
RUN pip install --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt


# ===========================
# STAGE 2 — Production image
# ===========================
FROM python:3.11-slim AS production

# Variables de entorno base
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    DEBIAN_FRONTEND=noninteractive \
    PATH="/usr/local/bin:$PATH"

# Instalar librerías mínimas necesarias en runtime
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        libpq5 \
        curl \
        libglib2.0-0 \
        libsm6 \
        libxext6 \
        libxrender-dev \
        && rm -rf /var/lib/apt/lists/*

# Crear usuario no-root
RUN groupadd -r appuser && useradd -r -g appuser appuser

WORKDIR /app

# Copiar dependencias y aplicación desde builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copiar código fuente del backend
COPY ../backend/src /app/src
COPY ../backend/main.py /app/main.py

# Crear carpetas necesarias
RUN mkdir -p uploads logs && \
    chown -R appuser:appuser /app

# === IMPORTANTE ===
# Asegurar que Python vea /app/src para que se importe src.db y src.api correctamente
ENV PYTHONPATH="/app/src:${PYTHONPATH}"

# Cambiar a usuario no-root
USER appuser

# Exponer puerto del backend
EXPOSE 8000

# Comando por defecto
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--log-level", "info"]
